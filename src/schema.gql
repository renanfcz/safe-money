# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  token: String!
}

type Category {
  id: String!
  title: String!
  description: String
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DashboardSumary {
  amountPaid: Float!
  amountToPay: Float!
  totalExpenses: Float!
  remainingBalance: Float!
}

type Expense {
  id: String!
  title: String
  description: String
  createdAt: DateTime
  value: Float
  status: String!
  category: Category!
  expenseGroupId: String!
}

type User {
  id: String!
  name: String!
  email: String!
  password: String!
  createdAt: DateTime!
  salary: Float!
  expenseGroup: [ExpenseGroup!]
}

type ExpenseGroup {
  id: String!
  month: String!
  year: Float!
  user: User!
  expenses: [Expense!]
}

type Query {
  findAllExpensesGrouping: [ExpenseGroup!]!
  getSumaryDashboard(month: String!, year: Float!): DashboardSumary!
  findAllUsers: [User!]!
  findOneUser(id: String!): User!
  findAllCategories: [Category!]!
  isValidToken: Boolean!
}

type Mutation {
  createExpense(data: ExpenseCreateInput!): Expense!
  removeExpense(id: String!): Expense!
  createUser(createUserInput: UserCreateInput!): User!
  updateUser(id: String!, updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  createCategory(createCategoryInput: CategoryCreateInput!): Category!
  updateCategory(id: String!, updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: String!): Category!
  login(authInput: AuthInput!): Auth!
}

input ExpenseCreateInput {
  title: String!
  description: String
  value: Float
  categoryId: String!
  expenseGroupId: String
  status: String
  month: String
  year: Float
  userId: String
}

input UserCreateInput {
  name: String!
  email: String!
  password: String!
  salary: Float!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
  salary: Float
}

input CategoryCreateInput {
  title: String!
  description: String
}

input UpdateCategoryInput {
  title: String
  description: String
}

input AuthInput {
  email: String!
  password: String!
}